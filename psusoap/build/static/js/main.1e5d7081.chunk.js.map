{"version":3,"sources":["firebase.js","redux/store.js","components/Nav.js","components/Upload.js","components/Login.js","components/Show.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","user","id","name","allAction","login","dispatch","a","axios","post","res","data","GetStudentDetailsResult","string","surname","save","localStorage","setItem","type","logout","rootReducer","combineReducers","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","logger","thunk","Nav","AllAction","bindActionCreators","useDispatch","Item","className","to","getItem","onClick","clear","Upload","props","useState","files","setFiles","setUser","url_review","setUrlreview","useEffect","getlocalStorage","load","history","push","split","fileName","ts","Date","replace","getTime","storage","ref","put","url","console","log","writeFirestore","toString","firestore","collection","doc","set","then","alert","catch","error","style","padding","textAlign","src","height","multiple","onChange","e","target","URL","createObjectURL","handleChange","Login","username","password","form","setForm","useSelector","state","span","placeholder","value","marginBottom","Show","setData","tmp","get","querySnapshot","forEach","finally","getFirestore","gutter","length","map","item","i","key","backgroundImage","display","justifyContent","alignItems","backgroundPosition","backgroundSize","backgroundRepeat","App","path","exact","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.1e5d7081.chunk.js","sourcesContent":["import firebase from 'firebase' //เพิ่มโมดูล firebase\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyD9tZXwxYLKr16GoZxXL61qST6MbEIQ14Q\",\r\n    authDomain: \"mini-project-1f085.firebaseapp.com\",\r\n    databaseURL: \"https://mini-project-1f085.firebaseio.com\",\r\n    projectId: \"mini-project-1f085\",\r\n    storageBucket: \"mini-project-1f085.appspot.com\",\r\n    messagingSenderId: \"8118581832\",\r\n    appId: \"1:8118581832:web:60c61db17a959649f8f67d\",\r\n    measurementId: \"G-CSJHZYBDTG\"\r\n\r\n    \r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  export default firebase // ส่งfirebase ให้สามารถใช้ในไฟล์อื่นได้","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport axios from \"axios\";\r\nimport logger from \"redux-logger\";\r\nconst user = {\r\n  id: \"\",\r\n  name: \"\"\r\n};\r\nexport const allAction = {\r\n  login: user => async dispatch => {\r\n    \r\n    let res = await axios.post(`https://psusoap.herokuapp.com/`, { ...user });\r\n    // let res = await axios.post(`http://localhost/`, { ...user });\r\n    const [id, name, surname] = res.data.GetStudentDetailsResult.string;\r\n    let save = id + \" : \" + name + \" \" + surname ;\r\n    localStorage.setItem(\"user\", save);\r\n    dispatch({ type: \"LOGIN\", id: id, name: name + \" \" + surname });\r\n  },\r\n  logout: ()=> async dispatch =>{\r\n    dispatch({ type: \"LOGOUT\" });\r\n  }\r\n};\r\nconst loginReducer = (data = user, action) => {\r\n  switch (action.type) {\r\n    case \"LOGIN\":\r\n      return {\r\n        ...data,\r\n        id: action.id,\r\n        name: action.name\r\n      };\r\n    case \"LOGOUT\":\r\n      return {\r\n        ...data,\r\n        id: \"\",\r\n        name: \"\"\r\n      };\r\n    default:\r\n      return data;\r\n  }\r\n};\r\nconst rootReducer = combineReducers({\r\n  user: loginReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(logger, thunk))\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport { Breadcrumb } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { allAction } from \"../redux/store\";\r\n\r\nconst Nav = () => {\r\n  const AllAction = bindActionCreators(allAction, useDispatch());\r\n\r\n  const getName = () => {\r\n    return localStorage.getItem(\"user\");\r\n  };\r\n  const logout = () => {\r\n    localStorage.clear();\r\n    AllAction.logout();\r\n    \r\n  };\r\n  return (\r\n    <div >\r\n      <Breadcrumb >\r\n        <Breadcrumb.Item className=\"text-big\" >\r\n          <Link to=\"/show\" >My Gallery</Link>\r\n        </Breadcrumb.Item>\r\n        <Breadcrumb.Item className=\"text-big\">\r\n          <Link to=\"/upload\">Upload</Link>\r\n        </Breadcrumb.Item>\r\n        <Breadcrumb.Item className=\"text-big\">{getName()}</Breadcrumb.Item>\r\n        <Breadcrumb.Item className=\"text-big\">\r\n          <Link onClick={logout} to=\"/\">logout</Link>\r\n        </Breadcrumb.Item>\r\n      </Breadcrumb>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport firebase from \"../firebase\";\r\nimport Nav from \"./Nav\";\r\nimport { Button } from \"antd\";\r\nfunction Upload(props) {\r\n  const [files, setFiles] = useState({});\r\n  const [user, setUser] = useState({ id: \"\", name: \"\" });\r\n  const [url_review, setUrlreview] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    getlocalStorage();\r\n  }, []);\r\n  function handleChange(e) {\r\n    // ref3\r\n    setFiles(e.target.files[0]);\r\n    console.log(e.target.files[0]);\r\n\r\n    setUrlreview(URL.createObjectURL(e.target.files[0]));\r\n  }\r\n  const getlocalStorage = () => {\r\n    let load = localStorage.getItem(\"user\");\r\n    if (load) {\r\n      props.history.push(\"/upload\");\r\n      load = load.split(\":\");\r\n      setUser({ id: load[0], name: load[1] });\r\n    } else {\r\n      props.history.push(\"/\");\r\n    }\r\n  };\r\n  const clear = () =>{\r\n    setUrlreview(\"\")\r\n    setFiles({})\r\n  }\r\n  async function upload() {\r\n    // files.forEach((file) => {\r\n      let fileName = files.name;\r\n      let ts = new Date();\r\n      //ref 5\r\n      fileName = fileName.replace(/\\s/g, \"\");\r\n      fileName = ts.getTime() + fileName;\r\n\r\n      let storageRef = firebase.storage().ref(fileName);\r\n      storageRef.put(files);\r\n      let url =\r\n        \"https://firebasestorage.googleapis.com/v0/b/mini-project-1f085.appspot.com/o/\" +\r\n        fileName +\r\n        \"?alt=media\";\r\n      console.log({ name: files.name, url: url });\r\n      writeFirestore({ name: files.name, url: url });\r\n    // });\r\n  }\r\n  //ref4\r\n  function writeFirestore(data) {\r\n    console.log(user);\r\n    console.log(user.id.toString());\r\n\r\n    let db = firebase.firestore();\r\n    db.collection(user.id.toString())\r\n      .doc()\r\n      .set(data)\r\n      .then(function () {\r\n        console.log(\"Document successfully written!\");\r\n        alert(\"อัปโหลดรูปสำเร็จ\");\r\n        clear()\r\n      })\r\n      .catch(function (error) {\r\n        alert(\"ไม่อัปโหลดรูปสำเร็จ\");\r\n\r\n        console.error(\"Error writing document: \", error);\r\n      });\r\n  }\r\n  return (\r\n    <div>\r\n      <Nav />\r\n      <div style={{ padding: 30, textAlign: \"center\" }}>\r\n        <h1>UPLOAD</h1>\r\n        <div>\r\n          {url_review != \"\" && (\r\n            <div>\r\n              <img src={url_review} height=\"500px\" />\r\n            </div>\r\n          )}\r\n          {url_review == \"\" && (\r\n            <div>\r\n              <input type=\"file\" multiple onChange={(e) => handleChange(e)} />\r\n            </div>\r\n          )}\r\n\r\n          <div style={{padding:10}}>\r\n            <Button type=\"primary\" onClick={upload}>\r\n              Upload\r\n            </Button>{\" \"}\r\n            <Button type=\"primary\" onClick={clear}>\r\n              Clear\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Upload;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { allAction } from \"../redux/store\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Button, Row, Col, Input } from \"antd\";\r\nimport \"./login.css\";\r\nconst Login = props => {\r\n  const [form, setForm] = useState({\r\n    username: \"\",\r\n    password: \"\"\r\n  });\r\n  const AllAction = bindActionCreators(allAction, useDispatch());\r\n  const user = useSelector(state => state.user);\r\n  const getlocalStorage = () => {\r\n    let load = localStorage.getItem(\"user\");\r\n    if (load) {\r\n      props.history.push(\"/show\");\r\n    } else {\r\n      props.history.push(\"/\");\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (user.id != \"\") {\r\n      props.history.push(\"/show\");\r\n    }\r\n    getlocalStorage();\r\n  }, []);\r\n  const login = async () => {\r\n    await AllAction.login(form);\r\n    props.history.push(\"/show\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg\">\r\n      <Row >\r\n        <Col className=\"gutter-row\" span={6}></Col>\r\n        <Col className=\"gutter-row\" span={6}></Col>\r\n        <Col className=\"gutter-row\" span={6}></Col>\r\n        <Col className=\"gutter-row\" span={6}>\r\n          <div className=\"flex-input\">\r\n            <div>\r\n              <h4>PSU Passport Authentication</h4>\r\n              <Input\r\n                placeholder=\"PSU Passport Account Name\"\r\n                onChange={e => {\r\n                  setForm({ ...form, username: e.target.value });\r\n                }}\r\n                style={{ marginBottom: 5 }}\r\n              />\r\n              <Input\r\n                placeholder=\"Password\"\r\n                type=\"password\"\r\n                onChange={e => {\r\n                  setForm({ ...form, password: e.target.value });\r\n                }}\r\n                style={{ marginBottom: 5 }}\r\n              />\r\n\r\n              <div>\r\n                <Button type=\"primary\" onClick={login}>\r\n                  Login\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\nexport default Login;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport firebase from \"../firebase\";\r\nimport { allAction } from \"../redux/store\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Row, Col } from \"antd\";\r\nimport Nav from \"./Nav\";\r\nconst Show = (props) => {\r\n  const [data, setData] = useState([]);\r\n  const user = { id: \"\", name: \"\" };\r\n  const AllAction = bindActionCreators(allAction, useDispatch());\r\n  useEffect(() => {\r\n    getlocalStorage();\r\n  }, []);\r\n  const getlocalStorage = () => {\r\n    let load = localStorage.getItem(\"user\");\r\n    if (load) {\r\n      // props.history.push(\"/show\");\r\n      load = load.split(\":\");\r\n      user.name = load[1];\r\n      user.id = load[0];\r\n      if ((user.id = \"\")) {\r\n        props.history.push(\"/\");\r\n      } else {\r\n        console.log(load);\r\n        console.log(user.id);\r\n        console.log(user.name);\r\n        console.log(load[0]);\r\n      user.id = load[0];\r\n      console.log(user.id);\r\n        \r\n        getFirestore();\r\n      }\r\n    } else {\r\n      props.history.push(\"/\");\r\n    }\r\n  };\r\n  //ref1\r\n  function getFirestore() {\r\n    let tmp = [];\r\n    let db = firebase.firestore();\r\n    db.collection(user.id.toString())\r\n      .get()\r\n      .then(function (querySnapshot) {\r\n        querySnapshot.forEach(function (doc) {\r\n          // doc.data() is never undefined for query doc snapshots\r\n          console.log(doc.id, \" => \", doc.data());\r\n          tmp.push(doc.data());\r\n        });\r\n      })\r\n      .finally(() => {\r\n        setData(tmp);\r\n      });\r\n  }\r\n  function renderImg() {\r\n    if (data.length == 0) return <div>Not Found</div>;\r\n    return data.map((item, i) => {\r\n      return (\r\n        <Col span={6} style={{ padding: 10 }} key={i}>\r\n          <div\r\n            style={{\r\n              backgroundImage: \"url(\" + item.url + \")\",\r\n              height: 250,\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              backgroundPosition: \"center\",\r\n              backgroundSize: 500,\r\n              backgroundRepeat: \"no-repeat\",\r\n            }}\r\n          >\r\n            <h1 className=\"mark\">{item.name}</h1>\r\n          </div>\r\n          {/* <img src={item.url} width=\"100%\" /> */}\r\n        </Col>\r\n      );\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Nav />\r\n      <Row gutter={16} style={{ padding: 30 }}>\r\n        {renderImg()}\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Show;\r\n","import React from 'react'\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\r\nimport Upload from './components/Upload'\r\nimport Login from './components/Login'\r\nimport Show from './components/Show'\r\nimport './App.css'\r\nimport 'antd/dist/antd.css';\r\nfunction App () {\r\n    return (\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route path='/upload' exact component={Upload} />\r\n                <Route path='/' exact component={Login} />\r\n                <Route path='/show' exact component={Show} />\r\n            </Switch>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default App","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}